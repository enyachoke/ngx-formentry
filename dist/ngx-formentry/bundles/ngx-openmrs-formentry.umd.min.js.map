{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","node_modules/tslib/tslib.es6.js","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-control-type.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/rendering-type.ts"],"names":["DebugModeService","this","cookieKey","prototype","debugEnabled","Injectable","FormErrorsService","announceErrorFieldSource","Subject","announceErrorField$","asObservable","announceErrorField","error","next","control","tab","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","_this","valueChanges","subscribe","ControlRelations","relationFor","_otherRelations","_relationFor","_relations","addRelatedControls","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","hiderHelper","disablerHelper","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","None","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JSExpressionValidatorsEnabled","JsExpressionValidator","helperFunctions","js_expression","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","MAX_LENGTH_MSG","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","minlength","requiredLength","maxlength","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","childComponents","isCollapsed","locationsLoading","locationsInput$","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","valueProcessingInfo","lastFormTab","scrollToControl","isExpanded","parentComponent","addChildComponent","selectQuestion","defaltValues","of","resolveSelectedValue","locations$","pipe","debounceTime","distinctUntilChanged","tap","switchMap","term","searchOptions","catchError","dataSourceOptions","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","behavior","block","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","_nodeChange","EventEmitter","target","name","_node","compareString","stopPropagation","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","SecurePipe","_ref","sanitizer","_latestValue","_latestReturnedValue","_subscription","_obj","_result","BehaviorSubject","_internalSubscription","ngOnDestroy","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","_this_1","previousUrl","sanitized","bypassSecurityTrustUrl","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","NgModule","declarations","imports","CommonModule","exports","providers","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_highlightedOption","_options","highlight","equalValues","v0","v1","slice","sort","every","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","trim","resetFilter","l","toUpperCase","t","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_b","tslib_1.__values","_c","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","KEYS","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","allowClear","highlightColor","highlightTextColor","noFilter","notFoundMsg","placeholder","opened","closed","deselected","typed","_value","filterEnabled","filterInputWidth","hasFocus","isBelow","isDisabled","isOpen","placeholderView","clearClicked","selectContainerClicked","onChange","_","onTouched","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","onWindowClick","closeDropdown","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","TypeError","firstTime","updatePosition","filterInput","nativeElement","clearFilterInput","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","altKey","preventDefault","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","encapsulation","ViewEncapsulation","ViewChild","SelectDropdownComponent","optionClicked","singleFilterClick","singleFilterInput","singleFilterKeydown","disabledColor","disabledTextColor","optionsReset","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","getOptionStyle","background-color","color","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","FormsModule","RemoteFileUploadComponent","renderer","uploading","innerValue","propagateChange","_dataSource","data","fileUpload","image","clearValue","Renderer2","RemoteFileUploadModule","NgxFileUploaderModule","DatePickerComponent","locale","viewFormat","returnObject","onDatePickerCancel","onSelectDate","onDisplayMonths","onDisplayYears","displayYearsIndex","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearRange","generateCalendar","prev","subtract","showMonthSelection","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","generateYears","years","_.chunk","currentMonth","dayNames","weekdaysShort","initDate","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","showSecond","use12Hour","onSelectTime","onTimePickerCancel","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","cancelTimePicker","selectNow","clearTime","ModalComponent","onOverlayClick","closeModal","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","showDate","showTime","showWeeks","weeks","onDateChange","showDatePicker","showTimePicker","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","toggleTimePicker","modelValue","DateTimePickerModule","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","selectedTime","loadInitial","onTimeSelect","setDateTime","onDateSelect","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","selectionChange","getWeekPickerCssClass","getDatePickerCssClass","getTimePickerCssClass","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","NgxDateTimePickerModule","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","MatSelectModule","Option$1","AfeNgSelectComponent","question_options","getChangingText","getData","resolveSelectedOption","selected_question_option","searchText","subject","mappedOptions","onValueChange","subjectOption","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","showWeeksAdder","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","returnErrorOnNext","selectOptions","sampleData","concept","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","HD","deps","QuestionFactory","historicalHelperService","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalPrepopulate","calculate","s","Math","random","floor","String","fromCharCode","Form","questionFactory","existingOrders","_showErrors","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","hd","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","_d","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","_e","_f","repeatingModel","_g","_h","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","items","loading","characters","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","removed","RemoteSelectModule","AppointmentsOverviewComponent","showAppointments","loadingAppointments","errorLoadingAppointments","appointmentsLoaded","appointments","resetProperties","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","programTypeParams","getMonthlySchedule","limit","locationUuids","programType","appointment","scheduled","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterContainerComponent","encAdapter","$form","$enc","QuestionControlComponent","isUuid","arrayElement","arr_1","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onTouchedCallback","onChangeCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","NgSelectModule","MatIconModule","MatTabsModule","MatCardModule","FormBuilder","Pair","Page","Section","Select","DropDown"],"mappings":"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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","export enum AfeControlType {\n    AfeFormControl,\n    AfeFormArray,\n    AfeFormGroup,\n    None\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nimport * as _ from 'lodash';\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\n   let bmi;\n   const maxAgeInDays = 1856;\n    if (height && weight) {\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    const refSectionObject = _.first(bmiForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (bmi < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= bmi) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  bmi && refSectionObject ?  formattedSDValue : null;\n  }\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\n    let refSection ;\n    let formattedSDValue;\n    if (height && weight) {\n      height = parseFloat(height).toFixed(1);\n    }\n    const standardHeightMin = 45;\n    const standardMaxHeight = 110;\n    if ( height < standardHeightMin || height > standardMaxHeight) {\n      formattedSDValue = -4;\n    } else {\n        refSection = _.filter(weightForHeightRef, (refObject) => {\n        return parseFloat(refObject['Length']).toFixed(1) === height;\n      });\n    }\n\n    const refSectionObject = _.first(refSection);\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (weight < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= weight) {\n          minReferencePoint.push(value);\n          }\n          });\n\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight  ?  formattedSDValue : null;\n  }\n\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\n\n    const refSectionObject = _.first(heightForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (height < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= height) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { concat, of, Observable, Subject, BehaviorSubject } from 'rxjs';\nimport * as _ from 'lodash';\n\nimport { debounceTime, distinctUntilChanged, tap, switchMap, catchError, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'form-renderer',\n  templateUrl: 'form-renderer.component.html',\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  locations$: Observable<any[]>;\n  locationsLoading = false;\n  locationsInput$ = new Subject<string>();\n\n  constructor(\n    private validationFactory: ValidationFactory,\n    private dataSources: DataSources,\n    private formErrorsService: FormErrorsService,\n    @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n      this.node.question.renderingType === 'remote-select') {\n      let selectQuestion = this.node.form.searchNodeByQuestionId(this.node.question.key)[0];\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      let defaltValues = of([]);\n      if (this.dataSource.resolveSelectedValue(selectQuestion.control.value)) {\n        defaltValues = this.dataSource.resolveSelectedValue(selectQuestion.control.value);\n      }\n\n      this.locations$ = concat(\n        defaltValues,\n        this.locationsInput$.pipe(\n          debounceTime(200),\n          distinctUntilChanged(),\n          tap(() => this.locationsLoading = true),\n          switchMap(term => this.dataSource.searchOptions(term).pipe(\n            catchError(() => of([])), // empty list on error\n            tap(() => {\n              this.locationsLoading = false\n            })\n          ))\n        )\n      );\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      // console.log('Key', this.node.question);\n      // console.log('Data source', this.dataSource);\n    }\n\n  }\n\n\n  public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public tabSelected($event) {\n    this.activeTab = $event.index;\n    this.setPreviousTab();\n  }\n  public setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n  public hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          if (element !== null && element.focus) {\n            element.focus();\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }\n        }, 100);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    // console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    // console.log('Event', event);\n    // console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n      e.style.display = 'none';\n    } else {\n      e.style.display = 'block';\n    }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n  private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    templateUrl: 'error-renderer.component.html',\n    styleUrls: ['./error-renderer.component.css']\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select'\n          || this._node.question.renderingType === 'single-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    templateUrl: './select.component.html',\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    templateUrl: 'select-dropdown.component.html',\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    templateUrl: 'file-upload.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                // console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgxFileUploaderModule } from 'ngx-file-uploader-ampath';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, NgxFileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css'],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    templateUrl: './time-picker.component.html',\n    styleUrls: ['./time-picker.component.css'],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    templateUrl: './date-time-picker.component.html',\n    styleUrls: ['./date-time-picker.component.css'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","import { Moment } from 'moment/moment';\n\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    templateUrl: './ngx-date-time-picker.component.html',\n    styleUrls: ['./ngx-date-time-picker.component.css'],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format();\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    public value;\n    public showTimePicker = false;\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n\n    public writeValue(value) {\n        this.value = value;\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n\n    }\n\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public onDateSelect($event) {\n\n        const setDate = moment($event.value);\n        const setTime = this.selectedTime;\n        const dateString = this.setDateTime(setDate, setTime);\n\n        const selectedDate = $event.value;\n        this.value = dateString;\n\n    }\n\n    public toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n\n\n    public setCurrentTime() {\n\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm:ss');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const dateToUse = moment().format();\n        const nextWeekDate = moment(dateToUse).add($event.value, 'weeks');\n        const nextWeekTime = dateToUse;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public selectionChange($event) {\n        console.log('Week selected', $event);\n    }\n\n\n    public getWeekPickerCssClass() {\n        if (this.showTime) {\n            return 'col-sm-2 form-group';\n        }\n        return 'col-sm-3 form-group';\n    }\n\n    public getDatePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n\n        if (this.showTime === true) {\n            return 'col-sm-8 form-group';\n        }\n        return 'col-sm-12 form-group';\n    }\n\n    public getTimePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n        return 'col-sm-4 form-group';\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        let newTime;\n        if (this.showTime) {\n            newTime = moment(setTime).format('HH:mm:ss');\n        } else {\n            newTime = '00:00:00';\n        }\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = dateTimeString;\n        this.value = dateTimeString;\n        this.onChange(this.value);\n\n        return dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\n// import { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        DateTimePickerModule,\n        // AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        // console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        // console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select'  || 'single-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'single-select':\n        return this.toSelectQuestion(schema);\n      case 'multi-select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'file':\n        return this.toFileUploadQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n      schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources);\n      question.historicalDataValue = origValue;\n      if (schemaQuestion.historicalPrepopulate) {\n        question.defaultValue = origValue;\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox' ||\n                node.question.extras.questionOptions.rendering === 'multi-select') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n        console.log('valuePayload', valuePayload);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        } else {\n            // transform value to memoent value to avoid error\n            const formattedVal = moment(datetime).format();\n            const val = formattedVal.substring(0, 19).replace('T', ' ');\n            return this.isEmpty(val) ? undefined : val;\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox' ||\n            node.question.extras.questionOptions.rendering !== 'multi-select') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox' ||\n            obs.question.extras.questionOptions.rendering === 'multi-select') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        // console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        // console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            node.control.setValue(firstProvider.uuid);\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    templateUrl: 'remote-select.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  templateUrl: './appointments-overview.component.html',\n  styleUrls: ['./appointments-overview.component.css']\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        // console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const programTypes = ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838'];\n            const programTypeParams = programTypes.join();\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programType: programTypeParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\n@Component({\n    selector: 'encounter-viewer',\n    templateUrl: './encounter-viewer.component.html',\n    styleUrls: ['./encounter-viewer.component.css'],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.rootNode);\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n               private dataSources: DataSources) {\n    }\n\n    public ngOnInit() {\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n@Component({\n    selector: 'encounter-renderer',\n    templateUrl: './encounter-container.component.html',\n    styleUrls: ['./encounter-container.component.css']\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(private encAdapter: EncounterAdapter) { }\n\n    ngOnInit() {\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styleUrls: ['./question-control.component.css'],\n    templateUrl: './question-control.component.html',\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\n// import { SelectModule } from '../components/select/select.module';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        NgSelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","export enum RenderingType {\n    Form,\n    Page,\n    Section,\n    Select,\n    DropDown\n}\n"]}